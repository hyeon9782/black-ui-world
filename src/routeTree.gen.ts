/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SiginUpIndexImport } from './routes/sigin-up.index'
import { Route as SiginInIndexImport } from './routes/sigin-in.index'
import { Route as SettingIndexImport } from './routes/setting.index'
import { Route as ProfileIndexImport } from './routes/profile.index'
import { Route as EditorIndexImport } from './routes/editor.index'
import { Route as ArticleSlugImport } from './routes/article.$slug'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SiginUpIndexRoute = SiginUpIndexImport.update({
  path: '/sigin-up/',
  getParentRoute: () => rootRoute,
} as any)

const SiginInIndexRoute = SiginInIndexImport.update({
  path: '/sigin-in/',
  getParentRoute: () => rootRoute,
} as any)

const SettingIndexRoute = SettingIndexImport.update({
  path: '/setting/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const EditorIndexRoute = EditorIndexImport.update({
  path: '/editor/',
  getParentRoute: () => rootRoute,
} as any)

const ArticleSlugRoute = ArticleSlugImport.update({
  path: '/article/$slug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/article/$slug': {
      id: '/article/$slug'
      path: '/article/$slug'
      fullPath: '/article/$slug'
      preLoaderRoute: typeof ArticleSlugImport
      parentRoute: typeof rootRoute
    }
    '/editor/': {
      id: '/editor/'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/setting/': {
      id: '/setting/'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof SettingIndexImport
      parentRoute: typeof rootRoute
    }
    '/sigin-in/': {
      id: '/sigin-in/'
      path: '/sigin-in'
      fullPath: '/sigin-in'
      preLoaderRoute: typeof SiginInIndexImport
      parentRoute: typeof rootRoute
    }
    '/sigin-up/': {
      id: '/sigin-up/'
      path: '/sigin-up'
      fullPath: '/sigin-up'
      preLoaderRoute: typeof SiginUpIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ArticleSlugRoute,
  EditorIndexRoute,
  ProfileIndexRoute,
  SettingIndexRoute,
  SiginInIndexRoute,
  SiginUpIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/article/$slug",
        "/editor/",
        "/profile/",
        "/setting/",
        "/sigin-in/",
        "/sigin-up/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/article/$slug": {
      "filePath": "article.$slug.tsx"
    },
    "/editor/": {
      "filePath": "editor.index.tsx"
    },
    "/profile/": {
      "filePath": "profile.index.tsx"
    },
    "/setting/": {
      "filePath": "setting.index.tsx"
    },
    "/sigin-in/": {
      "filePath": "sigin-in.index.tsx"
    },
    "/sigin-up/": {
      "filePath": "sigin-up.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
